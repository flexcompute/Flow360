{
  "$defs": {
    "Air": {
      "additionalProperties": false,
      "description": "Material properties for Air\n\n\nParameters\n----------\ntype : typing.Literal['air'] = air\n        name : <class 'str'> = air\n        dynamic_viscosity : typing.Union[flow360.component.simulation.models.material.Sutherland, typing.Annotated[flow360.component.simulation.unit_system._Constrained, PlainSerializer(func=<function _dimensioned_type_serializer at 0x15c0edee0>, return_type=PydanticUndefined, when_used='always')]] = Sutherland(reference_viscosity=unyt_quantity(1.716e-05,, 'Pa*s'), reference_temperature=unyt_quantity(273.15,, 'K'), effective_temperature=unyt_quantity(110.4,, 'K'))\n    ",
      "properties": {
        "type": {
          "const": "air",
          "default": "air",
          "enum": [
            "air"
          ],
          "title": "Type",
          "type": "string"
        },
        "name": {
          "default": "air",
          "title": "Name",
          "type": "string"
        },
        "dynamic_viscosity": {
          "anyOf": [
            {
              "$ref": "#/$defs/Sutherland"
            },
            {
              "properties": {
                "value": {
                  "exclusiveMinimum": 0,
                  "type": "number"
                },
                "units": {
                  "dimension": "viscosity",
                  "enum": [
                    "Pa*s",
                    "dyn*s/cm**2",
                    "lbf*s/ft**2"
                  ],
                  "type": "string"
                }
              }
            }
          ],
          "default": {
            "referenceViscosity": {
              "units": "Pa*s",
              "value": 1.716e-05
            },
            "referenceTemperature": {
              "units": "K",
              "value": 273.15
            },
            "effectiveTemperature": {
              "units": "K",
              "value": 110.4
            }
          },
          "title": "Dynamic Viscosity"
        }
      },
      "title": "Air",
      "type": "object"
    },
    "KOmegaSST": {
      "additionalProperties": false,
      "description": ":class:`KOmegaSST` class\n\nParameters\n----------\nabsolute_tolerance : <class 'float'> = 1e-08\n        relative_tolerance : <class 'float'> = 0\n        order_of_accuracy : typing.Literal[1, 2] = 2\n        equation_eval_frequency : <class 'int'> = 4\n        update_jacobian_frequency : <class 'int'> = 4\n        max_force_jac_update_physical_steps : <class 'int'> = 0\n        linear_solver : <class 'flow360.component.simulation.models.solver_numerics.LinearSolver'> = LinearSolver(max_iterations=20, absolute_tolerance=None, relative_tolerance=None)\n        CFL_multiplier : <class 'float'> = 2.0\n        type_name : typing.Literal['kOmegaSST'] = kOmegaSST\n        DDES : <class 'bool'> = False\n        grid_size_for_LES : typing.Literal['maxEdgeLength', 'meanEdgeLength'] = maxEdgeLength\n        reconstruction_gradient_limiter : <class 'float'> = 1.0\n        quadratic_constitutive_relation : <class 'bool'> = False\n        modeling_constants : <class 'flow360.component.simulation.models.solver_numerics.KOmegaSSTModelConstants'> = KOmegaSSTModelConstants(type_name='kOmegaSSTConsts', C_DES1=0.78, C_DES2=0.61, C_d1=20.0, C_d2=3.0)\n    ",
      "properties": {
        "absolute_tolerance": {
          "default": 1e-08,
          "exclusiveMinimum": 0.0,
          "title": "Absolute Tolerance",
          "type": "number"
        },
        "relative_tolerance": {
          "default": 0,
          "minimum": 0.0,
          "title": "Relative Tolerance",
          "type": "number"
        },
        "order_of_accuracy": {
          "default": 2,
          "enum": [
            1,
            2
          ],
          "title": "Order Of Accuracy",
          "type": "integer"
        },
        "equation_eval_frequency": {
          "default": 4,
          "exclusiveMinimum": 0,
          "title": "Equation Eval Frequency",
          "type": "integer"
        },
        "update_jacobian_frequency": {
          "default": 4,
          "exclusiveMinimum": 0,
          "title": "Update Jacobian Frequency",
          "type": "integer"
        },
        "max_force_jac_update_physical_steps": {
          "default": 0,
          "minimum": 0,
          "title": "Max Force Jac Update Physical Steps",
          "type": "integer"
        },
        "linear_solver": {
          "allOf": [
            {
              "$ref": "#/$defs/LinearSolver"
            }
          ],
          "default": {
            "maxIterations": 20,
            "absoluteTolerance": null,
            "relativeTolerance": null
          }
        },
        "CFL_multiplier": {
          "default": 2.0,
          "exclusiveMinimum": 0.0,
          "title": "Cfl Multiplier",
          "type": "number"
        },
        "type_name": {
          "const": "kOmegaSST",
          "default": "kOmegaSST",
          "enum": [
            "kOmegaSST"
          ],
          "title": "Type Name",
          "type": "string"
        },
        "DDES": {
          "default": false,
          "title": "Ddes",
          "type": "boolean"
        },
        "grid_size_for_LES": {
          "default": "maxEdgeLength",
          "enum": [
            "maxEdgeLength",
            "meanEdgeLength"
          ],
          "title": "Grid Size For Les",
          "type": "string"
        },
        "reconstruction_gradient_limiter": {
          "default": 1.0,
          "maximum": 2.0,
          "minimum": 0.0,
          "title": "Reconstruction Gradient Limiter",
          "type": "number"
        },
        "quadratic_constitutive_relation": {
          "default": false,
          "title": "Quadratic Constitutive Relation",
          "type": "boolean"
        },
        "modeling_constants": {
          "allOf": [
            {
              "$ref": "#/$defs/KOmegaSSTModelConstants"
            }
          ],
          "default": {
            "typeName": "kOmegaSSTConsts",
            "CDES1": 0.78,
            "CDES2": 0.61,
            "CD1": 20.0,
            "CD2": 3.0
          }
        }
      },
      "title": "KOmegaSST",
      "type": "object"
    },
    "KOmegaSSTModelConstants": {
      "additionalProperties": false,
      "description": ":class:`KOmegaSSTModelConstants` class\n\nParameters\n----------\ntype_name : typing.Literal['kOmegaSSTConsts'] = kOmegaSSTConsts\n        C_DES1 : <class 'float'> = 0.78\n        C_DES2 : <class 'float'> = 0.61\n        C_d1 : <class 'float'> = 20.0\n        C_d2 : <class 'float'> = 3.0\n    ",
      "properties": {
        "type_name": {
          "const": "kOmegaSSTConsts",
          "default": "kOmegaSSTConsts",
          "enum": [
            "kOmegaSSTConsts"
          ],
          "title": "Type Name",
          "type": "string"
        },
        "C_DES1": {
          "default": 0.78,
          "minimum": 0.0,
          "title": "C Des1",
          "type": "number"
        },
        "C_DES2": {
          "default": 0.61,
          "minimum": 0.0,
          "title": "C Des2",
          "type": "number"
        },
        "C_d1": {
          "default": 20.0,
          "minimum": 0.0,
          "title": "C D1",
          "type": "number"
        },
        "C_d2": {
          "default": 3.0,
          "minimum": 0.0,
          "title": "C D2",
          "type": "number"
        }
      },
      "title": "KOmegaSSTModelConstants",
      "type": "object"
    },
    "LinearSolver": {
      "additionalProperties": false,
      "description": ":class:`LinearSolver` class for setting up linear solver for heat equation\n\nParameters\n----------\nmax_iterations : <class 'int'> = 30\n        absolute_tolerance : typing.Optional[typing.Annotated[float, Gt(gt=0)]] = None\n        relative_tolerance : typing.Optional[typing.Annotated[float, Gt(gt=0)]] = None\n    \n\nParameters\n----------\n\nmax_iterations : PositiveInt, optional\n    Maximum number of linear solver iterations, by default 50\n\nabsolute_tolerance : PositiveFloat, optional\n    The linear solver converges when the final residual of the pseudo steps below this value. Either absolute\n    tolerance or relative tolerance can be used to determine convergence, by default 1e-10\n\nrelative_tolerance :\n    The linear solver converges when the ratio of the final residual and the initial\n    residual of the pseudo step is below this value.\n\nvalidation: tolerance settings only available to HeatEquationSolver\n\nReturns\n-------\n:class:`LinearSolver`\n    An instance of the component class LinearSolver.\n\n\nExample\n-------\n>>> ls = LinearSolver(\n            max_iterations=50,\n            absoluteTolerance=1e-10\n    )",
      "properties": {
        "max_iterations": {
          "default": 30,
          "exclusiveMinimum": 0,
          "title": "Max Iterations",
          "type": "integer"
        },
        "absolute_tolerance": {
          "anyOf": [
            {
              "exclusiveMinimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Absolute Tolerance"
        },
        "relative_tolerance": {
          "anyOf": [
            {
              "exclusiveMinimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Relative Tolerance"
        }
      },
      "title": "LinearSolver",
      "type": "object"
    },
    "NavierStokesInitialCondition": {
      "additionalProperties": false,
      "description": "Parameters\n----------\ntype : typing.Literal['expression'] = expression\n        constants : typing.Optional[typing.Dict[str, str]] = None\n        rho : <class 'str'>\n        u : <class 'str'>\n        v : <class 'str'>\n        w : <class 'str'>\n        p : <class 'str'>\n    ",
      "properties": {
        "type": {
          "const": "expression",
          "default": "expression",
          "enum": [
            "expression"
          ],
          "title": "Type",
          "type": "string"
        },
        "constants": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Constants"
        },
        "rho": {
          "title": "Rho",
          "type": "string"
        },
        "u": {
          "title": "U",
          "type": "string"
        },
        "v": {
          "title": "V",
          "type": "string"
        },
        "w": {
          "title": "W",
          "type": "string"
        },
        "p": {
          "title": "P",
          "type": "string"
        }
      },
      "required": [
        "rho",
        "u",
        "v",
        "w",
        "p"
      ],
      "title": "NavierStokesInitialCondition",
      "type": "object"
    },
    "NavierStokesModifiedRestartSolution": {
      "additionalProperties": false,
      "description": "Parameters\n----------\ntype : typing.Literal['restartManipulation'] = restartManipulation\n        constants : typing.Optional[typing.Dict[str, str]] = None\n        rho : <class 'str'>\n        u : <class 'str'>\n        v : <class 'str'>\n        w : <class 'str'>\n        p : <class 'str'>\n    ",
      "properties": {
        "type": {
          "const": "restartManipulation",
          "default": "restartManipulation",
          "enum": [
            "restartManipulation"
          ],
          "title": "Type",
          "type": "string"
        },
        "constants": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Constants"
        },
        "rho": {
          "title": "Rho",
          "type": "string"
        },
        "u": {
          "title": "U",
          "type": "string"
        },
        "v": {
          "title": "V",
          "type": "string"
        },
        "w": {
          "title": "W",
          "type": "string"
        },
        "p": {
          "title": "P",
          "type": "string"
        }
      },
      "required": [
        "rho",
        "u",
        "v",
        "w",
        "p"
      ],
      "title": "NavierStokesModifiedRestartSolution",
      "type": "object"
    },
    "NavierStokesSolver": {
      "additionalProperties": false,
      "description": ":class:`NavierStokesSolver` class for setting up compressible Navier-Stokes solver\n\nParameters\n----------\nabsolute_tolerance : <class 'float'> = 1e-10\n        relative_tolerance : <class 'float'> = 0\n        order_of_accuracy : typing.Literal[1, 2] = 2\n        equation_eval_frequency : <class 'int'> = 1\n        update_jacobian_frequency : <class 'int'> = 4\n        max_force_jac_update_physical_steps : <class 'int'> = 0\n        linear_solver : <class 'flow360.component.simulation.models.solver_numerics.LinearSolver'> = LinearSolver(max_iterations=30, absolute_tolerance=None, relative_tolerance=None)\n        CFL_multiplier : <class 'float'> = 1.0\n        kappa_MUSCL : <class 'float'> = -1\n        numerical_dissipation_factor : <class 'float'> = 1\n        limit_velocity : <class 'bool'> = False\n        limit_pressure_density : <class 'bool'> = False\n        type_name : typing.Literal['Compressible'] = Compressible\n        low_mach_preconditioner : <class 'bool'> = False\n        low_mach_preconditioner_threshold : typing.Optional[typing.Annotated[float, Ge(ge=0)]] = None\n    \nParameters\n----------\n\nabsolute_tolerance :\n    Tolerance for the NS residual, below which the solver goes to the next physical step\n\nrelative_tolerance :\n    Tolerance to the relative residual, below which the solver goes to the next physical step. Relative residual is\n    defined as the ratio of the current pseudoStep\u2019s residual to the maximum residual present in the first\n    10 pseudoSteps within the current physicalStep. NOTE: relativeTolerance is ignored in steady simulations and\n    only absoluteTolerance is used as the convergence criterion\n\nCFL_multiplier :\n    Factor to the CFL definitions defined in \u201ctimeStepping\u201d section\n\nkappa_MUSCL :\n    Kappa for the MUSCL scheme, range from [-1, 1], with 1 being unstable. The default value of -1 leads to a 2nd\n    order upwind scheme and is the most stable. A value of 0.33 leads to a blended upwind/central scheme and is\n    recommended for low subsonic flows leading to reduced dissipation\n\nupdate_jacobian_frequency :\n    Frequency at which the jacobian is updated.\n\nequation_eval_frequency :\n    Frequency at which to update the compressible NS equation in loosely-coupled simulations\n\nmax_force_jac_update_physical_steps :\n    When which physical steps, the jacobian matrix is updated every pseudo step\n\norder_of_accuracy :\n    Order of accuracy in space\n\nlimit_velocity :\n    Limiter for velocity\n\nlimit_pressure_density :\n    Limiter for pressure and density\n\nnumerical_dissipation_factor :\n    A factor in the range [0.01, 1.0] which exponentially reduces the dissipation of the numerical flux.\n    The recommended starting value for most low-dissipation runs is 0.2\n\nlinear_solver:\n    Linear solver settings\n\nlow_mach_preconditioner:\n    Uses preconditioning for accelerating low Mach number flows.\n\nlow_mach_preconditioner_threshold:\n    For flow regions with Mach numbers smaller than threshold, the input Mach number to the preconditioner is\n    assumed to be the threshold value if it is smaller than the threshold.\n    The default value for the threshold is the freestream Mach number.\n\nReturns\n-------\n:class:`NavierStokesSolver`\n    An instance of the component class NavierStokesSolver.\n\nExample\n-------\n>>> ns = NavierStokesSolver(absolute_tolerance=1e-10)",
      "properties": {
        "absolute_tolerance": {
          "default": 1e-10,
          "exclusiveMinimum": 0.0,
          "title": "Absolute Tolerance",
          "type": "number"
        },
        "relative_tolerance": {
          "default": 0,
          "minimum": 0.0,
          "title": "Relative Tolerance",
          "type": "number"
        },
        "order_of_accuracy": {
          "default": 2,
          "enum": [
            1,
            2
          ],
          "title": "Order Of Accuracy",
          "type": "integer"
        },
        "equation_eval_frequency": {
          "default": 1,
          "exclusiveMinimum": 0,
          "title": "Equation Eval Frequency",
          "type": "integer"
        },
        "update_jacobian_frequency": {
          "default": 4,
          "exclusiveMinimum": 0,
          "title": "Update Jacobian Frequency",
          "type": "integer"
        },
        "max_force_jac_update_physical_steps": {
          "default": 0,
          "minimum": 0,
          "title": "Max Force Jac Update Physical Steps",
          "type": "integer"
        },
        "linear_solver": {
          "allOf": [
            {
              "$ref": "#/$defs/LinearSolver"
            }
          ],
          "default": {
            "maxIterations": 30,
            "absoluteTolerance": null,
            "relativeTolerance": null
          }
        },
        "CFL_multiplier": {
          "default": 1.0,
          "exclusiveMinimum": 0.0,
          "title": "Cfl Multiplier",
          "type": "number"
        },
        "kappa_MUSCL": {
          "default": -1,
          "maximum": 1.0,
          "minimum": -1.0,
          "title": "Kappa Muscl",
          "type": "number"
        },
        "numerical_dissipation_factor": {
          "default": 1,
          "maximum": 1.0,
          "minimum": 0.01,
          "title": "Numerical Dissipation Factor",
          "type": "number"
        },
        "limit_velocity": {
          "default": false,
          "title": "Limit Velocity",
          "type": "boolean"
        },
        "limit_pressure_density": {
          "default": false,
          "title": "Limit Pressure Density",
          "type": "boolean"
        },
        "type_name": {
          "const": "Compressible",
          "default": "Compressible",
          "enum": [
            "Compressible"
          ],
          "title": "Type Name",
          "type": "string"
        },
        "low_mach_preconditioner": {
          "default": false,
          "title": "Low Mach Preconditioner",
          "type": "boolean"
        },
        "low_mach_preconditioner_threshold": {
          "anyOf": [
            {
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Low Mach Preconditioner Threshold"
        }
      },
      "title": "NavierStokesSolver",
      "type": "object"
    },
    "NoneSolver": {
      "additionalProperties": false,
      "description": ":class:`SolverNone` class\n\nParameters\n----------\ntype_name : typing.Literal['None'] = None\n    ",
      "properties": {
        "type_name": {
          "const": "None",
          "default": "None",
          "enum": [
            "None"
          ],
          "title": "Type Name",
          "type": "string"
        }
      },
      "title": "NoneSolver",
      "type": "object"
    },
    "SpalartAllmaras": {
      "additionalProperties": false,
      "description": ":class:`SpalartAllmaras` class\n\nParameters\n----------\nabsolute_tolerance : <class 'float'> = 1e-08\n        relative_tolerance : <class 'float'> = 0\n        order_of_accuracy : typing.Literal[1, 2] = 2\n        equation_eval_frequency : <class 'int'> = 4\n        update_jacobian_frequency : <class 'int'> = 4\n        max_force_jac_update_physical_steps : <class 'int'> = 0\n        linear_solver : <class 'flow360.component.simulation.models.solver_numerics.LinearSolver'> = LinearSolver(max_iterations=20, absolute_tolerance=None, relative_tolerance=None)\n        CFL_multiplier : <class 'float'> = 2.0\n        type_name : typing.Literal['SpalartAllmaras'] = SpalartAllmaras\n        DDES : <class 'bool'> = False\n        grid_size_for_LES : typing.Literal['maxEdgeLength', 'meanEdgeLength'] = maxEdgeLength\n        reconstruction_gradient_limiter : typing.Optional[typing.Annotated[float, None, Interval(gt=None, ge=0, lt=None, le=2), None, None]] = 0.5\n        quadratic_constitutive_relation : <class 'bool'> = False\n        modeling_constants : typing.Optional[flow360.component.simulation.models.solver_numerics.SpalartAllmarasModelConstants] = SpalartAllmarasModelConstants(type_name='SpalartAllmarasConsts', C_DES=0.72, C_d=8.0)\n        rotation_correction : <class 'bool'> = False\n    ",
      "properties": {
        "absolute_tolerance": {
          "default": 1e-08,
          "exclusiveMinimum": 0.0,
          "title": "Absolute Tolerance",
          "type": "number"
        },
        "relative_tolerance": {
          "default": 0,
          "minimum": 0.0,
          "title": "Relative Tolerance",
          "type": "number"
        },
        "order_of_accuracy": {
          "default": 2,
          "enum": [
            1,
            2
          ],
          "title": "Order Of Accuracy",
          "type": "integer"
        },
        "equation_eval_frequency": {
          "default": 4,
          "exclusiveMinimum": 0,
          "title": "Equation Eval Frequency",
          "type": "integer"
        },
        "update_jacobian_frequency": {
          "default": 4,
          "exclusiveMinimum": 0,
          "title": "Update Jacobian Frequency",
          "type": "integer"
        },
        "max_force_jac_update_physical_steps": {
          "default": 0,
          "minimum": 0,
          "title": "Max Force Jac Update Physical Steps",
          "type": "integer"
        },
        "linear_solver": {
          "allOf": [
            {
              "$ref": "#/$defs/LinearSolver"
            }
          ],
          "default": {
            "maxIterations": 20,
            "absoluteTolerance": null,
            "relativeTolerance": null
          }
        },
        "CFL_multiplier": {
          "default": 2.0,
          "exclusiveMinimum": 0.0,
          "title": "Cfl Multiplier",
          "type": "number"
        },
        "type_name": {
          "const": "SpalartAllmaras",
          "default": "SpalartAllmaras",
          "enum": [
            "SpalartAllmaras"
          ],
          "title": "Type Name",
          "type": "string"
        },
        "DDES": {
          "default": false,
          "title": "Ddes",
          "type": "boolean"
        },
        "grid_size_for_LES": {
          "default": "maxEdgeLength",
          "enum": [
            "maxEdgeLength",
            "meanEdgeLength"
          ],
          "title": "Grid Size For Les",
          "type": "string"
        },
        "reconstruction_gradient_limiter": {
          "anyOf": [
            {
              "maximum": 2.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": 0.5,
          "title": "Reconstruction Gradient Limiter"
        },
        "quadratic_constitutive_relation": {
          "default": false,
          "title": "Quadratic Constitutive Relation",
          "type": "boolean"
        },
        "modeling_constants": {
          "anyOf": [
            {
              "$ref": "#/$defs/SpalartAllmarasModelConstants"
            },
            {
              "type": "null"
            }
          ],
          "default": {
            "typeName": "SpalartAllmarasConsts",
            "CDES": 0.72,
            "CD": 8.0
          }
        },
        "rotation_correction": {
          "default": false,
          "title": "Rotation Correction",
          "type": "boolean"
        }
      },
      "title": "SpalartAllmaras",
      "type": "object"
    },
    "SpalartAllmarasModelConstants": {
      "additionalProperties": false,
      "description": ":class:`SpalartAllmarasModelConstants` class\n\nParameters\n----------\ntype_name : typing.Literal['SpalartAllmarasConsts'] = SpalartAllmarasConsts\n        C_DES : <class 'float'> = 0.72\n        C_d : <class 'float'> = 8.0\n    ",
      "properties": {
        "type_name": {
          "const": "SpalartAllmarasConsts",
          "default": "SpalartAllmarasConsts",
          "enum": [
            "SpalartAllmarasConsts"
          ],
          "title": "Type Name",
          "type": "string"
        },
        "C_DES": {
          "default": 0.72,
          "minimum": 0.0,
          "title": "C Des",
          "type": "number"
        },
        "C_d": {
          "default": 8.0,
          "minimum": 0.0,
          "title": "C D",
          "type": "number"
        }
      },
      "title": "SpalartAllmarasModelConstants",
      "type": "object"
    },
    "Sutherland": {
      "additionalProperties": false,
      "description": "Sutherland's law\n\n\nParameters\n----------\nreference_viscosity : <class 'flow360.component.simulation.unit_system._Constrained'>\n        reference_temperature : <class 'flow360.component.simulation.unit_system._Constrained'>\n        effective_temperature : <class 'flow360.component.simulation.unit_system._Constrained'>\n    ",
      "properties": {
        "reference_viscosity": {
          "properties": {
            "value": {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            "units": {
              "dimension": "viscosity",
              "enum": [
                "Pa*s",
                "dyn*s/cm**2",
                "lbf*s/ft**2"
              ],
              "type": "string"
            }
          },
          "title": "Reference Viscosity"
        },
        "reference_temperature": {
          "properties": {
            "value": {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            "units": {
              "dimension": "temperature",
              "enum": [
                "K",
                "R"
              ],
              "type": "string"
            }
          },
          "title": "Reference Temperature"
        },
        "effective_temperature": {
          "properties": {
            "value": {
              "exclusiveMinimum": 0,
              "type": "number"
            },
            "units": {
              "dimension": "temperature",
              "enum": [
                "K",
                "R"
              ],
              "type": "string"
            }
          },
          "title": "Effective Temperature"
        }
      },
      "required": [
        "reference_viscosity",
        "reference_temperature",
        "effective_temperature"
      ],
      "title": "Sutherland",
      "type": "object"
    },
    "TransitionModelSolver": {
      "additionalProperties": false,
      "description": ":class:`TransitionModelSolver` class for setting up transition model solver\n\nParameters\n----------\nabsolute_tolerance : <class 'float'> = 1e-07\n        relative_tolerance : <class 'float'> = 0\n        order_of_accuracy : typing.Literal[1, 2] = 2\n        equation_eval_frequency : <class 'int'> = 4\n        update_jacobian_frequency : <class 'int'> = 4\n        max_force_jac_update_physical_steps : <class 'int'> = 0\n        linear_solver : <class 'flow360.component.simulation.models.solver_numerics.LinearSolver'> = LinearSolver(max_iterations=20, absolute_tolerance=None, relative_tolerance=None)\n        type_name : typing.Literal['AmplificationFactorTransport'] = AmplificationFactorTransport\n        turbulence_intensity_percent : <class 'float'> = 1.0\n        N_crit : <class 'float'> = 8.15\n    \nParameters\n----------\n\n(...)\n\nReturns\n-------\n:class:`TransitionModelSolver`\n    An instance of the component class TransitionModelSolver.\n\nExample\n-------\n>>> ts = TransitionModelSolver(absolute_tolerance=1e-10)",
      "properties": {
        "absolute_tolerance": {
          "default": 1e-07,
          "exclusiveMinimum": 0.0,
          "title": "Absolute Tolerance",
          "type": "number"
        },
        "relative_tolerance": {
          "default": 0,
          "minimum": 0.0,
          "title": "Relative Tolerance",
          "type": "number"
        },
        "order_of_accuracy": {
          "default": 2,
          "enum": [
            1,
            2
          ],
          "title": "Order Of Accuracy",
          "type": "integer"
        },
        "equation_eval_frequency": {
          "default": 4,
          "exclusiveMinimum": 0,
          "title": "Equation Eval Frequency",
          "type": "integer"
        },
        "update_jacobian_frequency": {
          "default": 4,
          "exclusiveMinimum": 0,
          "title": "Update Jacobian Frequency",
          "type": "integer"
        },
        "max_force_jac_update_physical_steps": {
          "default": 0,
          "minimum": 0,
          "title": "Max Force Jac Update Physical Steps",
          "type": "integer"
        },
        "linear_solver": {
          "allOf": [
            {
              "$ref": "#/$defs/LinearSolver"
            }
          ],
          "default": {
            "maxIterations": 20,
            "absoluteTolerance": null,
            "relativeTolerance": null
          }
        },
        "type_name": {
          "const": "AmplificationFactorTransport",
          "default": "AmplificationFactorTransport",
          "enum": [
            "AmplificationFactorTransport"
          ],
          "title": "Type Name",
          "type": "string"
        },
        "turbulence_intensity_percent": {
          "default": 1.0,
          "maximum": 2.5,
          "minimum": 0.03,
          "title": "Turbulence Intensity Percent",
          "type": "number"
        },
        "N_crit": {
          "default": 8.15,
          "maximum": 11.0,
          "minimum": 1.0,
          "title": "N Crit",
          "type": "number"
        }
      },
      "title": "TransitionModelSolver",
      "type": "object"
    }
  },
  "additionalProperties": false,
  "description": "General FluidDynamics volume model that contains all the common fields every fluid dynamics zone should have.\n\n\nParameters\n----------\nmaterial : <class 'flow360.component.simulation.models.material.Air'> = Air(type='air', name='air', dynamic_viscosity=Sutherland(reference_viscosity=unyt_quantity(1.716e-05,, 'Pa*s'),, reference_temperature=unyt_quantity(273.15,, 'K'),, effective_temperature=unyt_quantity(110.4,, 'K')))\n        initial_condition : typing.Union[flow360.component.simulation.models.volume_models.NavierStokesModifiedRestartSolution, flow360.component.simulation.models.volume_models.NavierStokesInitialCondition, NoneType] = None\n        type : typing.Literal['Fluid'] = Fluid\n        navier_stokes_solver : <class 'flow360.component.simulation.models.solver_numerics.NavierStokesSolver'> = NavierStokesSolver(absolute_tolerance=1e-10, relative_tolerance=0.0, order_of_accuracy=2, equation_eval_frequency=1, update_jacobian_frequency=4, max_force_jac_update_physical_steps=0, linear_solver=LinearSolver(max_iterations=30,, absolute_tolerance=None,, relative_tolerance=None), CFL_multiplier=1.0, kappa_MUSCL=-1.0, numerical_dissipation_factor=1.0, limit_velocity=False, limit_pressure_density=False, type_name='Compressible', low_mach_preconditioner=False, low_mach_preconditioner_threshold=None)\n        turbulence_model_solver : typing.Union[flow360.component.simulation.models.solver_numerics.NoneSolver, flow360.component.simulation.models.solver_numerics.SpalartAllmaras, flow360.component.simulation.models.solver_numerics.KOmegaSST] = SpalartAllmaras(absolute_tolerance=1e-08, relative_tolerance=0.0, order_of_accuracy=2, equation_eval_frequency=4, update_jacobian_frequency=4, max_force_jac_update_physical_steps=0, linear_solver=LinearSolver(max_iterations=20,, absolute_tolerance=None,, relative_tolerance=None), CFL_multiplier=2.0, type_name='SpalartAllmaras', DDES=False, grid_size_for_LES='maxEdgeLength', reconstruction_gradient_limiter=0.5, quadratic_constitutive_relation=False, modeling_constants=SpalartAllmarasModelConstants(type_name='SpalartAllmarasConsts',, C_DES=0.72,, C_d=8.0), rotation_correction=False)\n        transition_model_solver : typing.Optional[flow360.component.simulation.models.solver_numerics.TransitionModelSolver] = None\n    ",
  "properties": {
    "material": {
      "allOf": [
        {
          "$ref": "#/$defs/Air"
        }
      ],
      "default": {
        "type": "air",
        "name": "air",
        "dynamicViscosity": {
          "effectiveTemperature": {
            "units": "K",
            "value": 110.4
          },
          "referenceTemperature": {
            "units": "K",
            "value": 273.15
          },
          "referenceViscosity": {
            "units": "Pa*s",
            "value": 1.716e-05
          }
        }
      }
    },
    "initial_condition": {
      "anyOf": [
        {
          "$ref": "#/$defs/NavierStokesModifiedRestartSolution"
        },
        {
          "$ref": "#/$defs/NavierStokesInitialCondition"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Initial Condition"
    },
    "type": {
      "const": "Fluid",
      "default": "Fluid",
      "enum": [
        "Fluid"
      ],
      "title": "Type",
      "type": "string"
    },
    "navier_stokes_solver": {
      "allOf": [
        {
          "$ref": "#/$defs/NavierStokesSolver"
        }
      ],
      "default": {
        "absoluteTolerance": 1e-10,
        "relativeTolerance": 0.0,
        "orderOfAccuracy": 2,
        "equationEvalFrequency": 1,
        "updateJacobianFrequency": 4,
        "maxForceJacUpdatePhysicalSteps": 0,
        "linearSolver": {
          "absoluteTolerance": null,
          "maxIterations": 30,
          "relativeTolerance": null
        },
        "CFLMultiplier": 1.0,
        "kappaMUSCL": -1.0,
        "numericalDissipationFactor": 1.0,
        "limitVelocity": false,
        "limitPressureDensity": false,
        "typeName": "Compressible",
        "lowMachPreconditioner": false,
        "lowMachPreconditionerThreshold": null
      }
    },
    "turbulence_model_solver": {
      "anyOf": [
        {
          "$ref": "#/$defs/NoneSolver"
        },
        {
          "$ref": "#/$defs/SpalartAllmaras"
        },
        {
          "$ref": "#/$defs/KOmegaSST"
        }
      ],
      "default": {
        "absoluteTolerance": 1e-08,
        "relativeTolerance": 0.0,
        "orderOfAccuracy": 2,
        "equationEvalFrequency": 4,
        "updateJacobianFrequency": 4,
        "maxForceJacUpdatePhysicalSteps": 0,
        "linearSolver": {
          "absoluteTolerance": null,
          "maxIterations": 20,
          "relativeTolerance": null
        },
        "CFLMultiplier": 2.0,
        "typeName": "SpalartAllmaras",
        "DDES": false,
        "gridSizeForLES": "maxEdgeLength",
        "reconstructionGradientLimiter": 0.5,
        "quadraticConstitutiveRelation": false,
        "modelingConstants": {
          "CD": 8.0,
          "CDES": 0.72,
          "typeName": "SpalartAllmarasConsts"
        },
        "rotationCorrection": false
      },
      "title": "Turbulence Model Solver"
    },
    "transition_model_solver": {
      "anyOf": [
        {
          "$ref": "#/$defs/TransitionModelSolver"
        },
        {
          "type": "null"
        }
      ],
      "default": null
    }
  },
  "title": "Fluid",
  "type": "object"
}