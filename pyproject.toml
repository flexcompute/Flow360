[tool.poetry]
name = "flow360"
version = "v0.2.0"
description = ""
authors = ["Flexcompute <support@flexcompute.com>"]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
pydantic = "^2.7.0"
pytest = "^7.1.2"
click = "^8.1.3"
toml = "^0.10.2"
requests = "^2.28.1"
boto3 = "^1.24.63"
numpy = [{ python = "^3.7", version = "^1.19.0" },
    { python = "^3.8", version = "^1.20.0" },
    { python = "^3.9", version = "^1.23.0" },
    { python = "^3.12", version = "^1.26.0" }]
matplotlib =  [{ python = "^3.7", version = "^3.5.3" },
    { python = "^3.8", version = "^3.6.2" },
    { python = "^3.9", version = "^3.6.2" },
    { python = "^3.10", version = "^3.6.2" }]
pyyaml = "^6.0.1"
rich = "^13.3.4"
h5py = "^3.10.0"
zstandard = "^0.21.0"
unyt = [{ python = "^3.7", version = "^2.8.0" },
    { python = "^3.8", version = "^2.9.5" }]
pandas = "^2.2.1"

# docs
autodoc_pydantic = {version="*", optional = true}
jupyter = {version="*", optional = true}
jinja2 = {version = ">=3.1.2", optional = true}
ipython = {version="*", optional = true}
nbconvert = {version = ">=7.11.0", optional = true}
sphinx = {version=">=7", optional = true}
nbsphinx = {version = ">=0.8.7", optional = true}
sphinx-copybutton = {version=">=0.5.2", optional = true}
sphinx-book-theme = {version = ">=1.0.1", optional = true}
pydata-sphinx-theme = {version = ">=0.13.3", optional = true}
sphinx-favicon = {version="*", optional = true}
sphinx-sitemap = {version=">=2.5.1", optional = true}
sphinx-notfound-page = {version="*", optional = true}
sphinx-tabs = {version="*", optional = true}
nbdime = {version="*", optional = true}
myst-parser = {version="*", optional = true}
sphinxemoji = {version="*", optional = true}

readthedocs-sphinx-search = {version="*", optional = true}
cairosvg = {version="*", optional = true }
sphinxcontrib-svg2pdfconverter = {version="*", optional = true}
sphinx-prompt = {version="*", optional = true}
sphinx_design = {version="*", optional = true}
sphinx_toolbox = {version="*", optional = true}


[tool.poetry.group.dev.dependencies]
pytest-asyncio = "^0.20.3"
pytest-cov = "^4.0.0"
autohooks = "^23.4.0"
autohooks-plugin-black = "^22.11.0"
autohooks-plugin-isort = "^22.8.0"
autohooks-plugin-ruff = "^24.1.0"
pytest = "^7.3.0"
ruff = "^0.4.1"
black = "^24.1.0"
notebook = "^7.0.6"

[tool.poetry.extras]
docs = [
    "autodoc_pydantic",
    "jupyter",
    "jinja2",
    "ipython",
    "nbconvert",
    "sphinx",
    "nbsphinx",
    "sphinx-copybutton",
    "sphinx-book-theme",
    "pydata-sphinx-theme",
    "sphinx-favicon",
    "sphinx-sitemap",
    "sphinx-notfound-page",
    "sphinx-tabs",
    "nbdime",
    "myst-parser",
    "pyswarms",
    "sphinxemoji",
    "readthedocs-sphinx-search",
    "cairosvg",
    "sphinxcontrib-svg2pdfconverter",
    "sphinx-prompt",
    "sphinx_design",
    "sphinx_toolbox",
]

[tool.isort]
profile = "black"

[tool.black]
line-length = 100
target-version = ["py37", "py38", "py39", "py310", "py311"]
exclude = '''
/(
    \.git
)/
'''

[tool.autohooks]
mode = "poetry"
pre-commit = ["autohooks.plugins.black", "autohooks.plugins.isort", "autohooks.plugins.ruff"]

[tool.autohooks.plugins.ruff]
arguments = ["--fix", "--exit-non-zero-on-fix"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
flow360 = "flow360.cli:flow360"

[tool.ruff]
# Style copied from tidy3d
lint.ignore-init-module-imports = true
lint.typing-modules = ["tidy3d.components.types"] # without this Literal["something fails"]
line-length = 100
fix = true
lint.ignore = [
  "E501",  # line too long, handled by black
  "B008",  # do not perform function calls in argument defaults
  "C901",  # too complex
  "UP007", # use x | y instead of union[x,y] (does not work)
  "B905",  # `zip()` without an explicit `strict=` parameter
  "C408",  # C408 Unnecessary `dict` call (rewrite as a literal)
  "B904",
  "B028",  # stacklevel
  "UP006", # typy annotation with Tuple[float] messes up pydantic
  "UP038", # TODO decide what to do here
  "UP035", # TODO decide what to do here
]

lint.select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "UP",
  "NPY201", # numpy 2.* compatibility check
]

exclude = ["examples"]

